/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keymap_italian.h"

// Layer definitions
#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
// -----------------

&mt {
	//  flavor = "tap-preferred";
	// tapping_term_ms = <200>;
};

&sk {
	ignore-modifiers;
};

/ {
	macros {
		// sometimes my device thinks a modifier is being held down
		// pressing all modifiers fixes it.
		unstick: unstick {
			label = "ZM_unstick";
			compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			bindings
				= <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
		};
	};

	conditional_layers {
		compatible = "zmk,conditional-layers";
		func_layer {
			if-layers = <LOWER RAISE>;
			then-layer = <ADJUST>;
		};
	};


	combos {
		compatible = "zmk,combos";
			// both right thumb keys
			combo_accent {
				timeout-ms = <300>;
				key-positions = <32 33>;
				bindings = <&mo ACCENT>;
			};
			// internal-left & external-right thumb keys
			combo_sym2 {
					timeout-ms = <200>;
					key-positions = <31 33>;
					bindings = <&mo SYM2>;
			};
			// both left thumb keys
			combo_settings {
					timeout-ms = <300>;
					key-positions = <30 31>;
					bindings = <&mo SETTINGS>;
			};
    };

	keymap {
		compatible = "zmk,keymap";

		// Base alpha layer
		default_layer {
			bindings = <
				&kp Q &kp W &kp E &kp R &kp T                                 &kp Y &kp U  &kp I     &kp O   &kp P
				&mt LALT A &mt LCTL S &mt LSHIFT D &mt LGUI F &kp G           &kp H &mt RGUI J  &mt RSHIFT K     &mt RCTRL L &mt RALT IT_OGRV
				&kp Z &kp X &kp C &kp V &kp B                                 &kp N &kp M  &kp COMMA &kp DOT &kp IT_UGRV
					&lt RAISE RET &lt LOWER TAB                                 &lt LOWER ESC &lt RAISE SPACE
			>;
		};

		// Numbers and high frequency symbols
		lower_layer {
			bindings = <
				&kp F8 &kp F7 &kp F6 &kp F5 &kp F16		                                    &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
				&kp F4 &kp F3 &kp F2 &kp F1 &trans  &kp IT_EQL &kp IT_QUES &kp IT_SQUOT &kp IT_MINUS &kp IT_AST
				&kp IT_GREAT &kp IT_PERC &kp IT_RPAR &kp IT_RBRC &kp IT_RBKT 	&kp IT_AT &kp IT_EXCL &kp IT_DQUOT &kp IT_PLUS &kp IT_FSLH
																											&mo FNC  &mo SYM2       &trans &trans
			>;
		};
//       KC_F8,   KC_F7,   KC_F6,   KC_F5,  KC_F16,                     KC_MINUS,    KC_4,    KC_5,    KC_6,  KC_F17,
//       LA(KC_F4), LC(KC_F3), LS(KC_F2), LG(KC_F1), _______,        KC_KP_DOT,RG(KC_0),RS(KC_1),RC(KC_2),RA(KC_3),
//       KC_F12,   KC_F11,  KC_F10,   KC_F9,KC_MINUS,                      KC_PLUS,    KC_9,    KC_8,    KC_7, KC_SLSH,

		// Main modifiers and arrow keys
		raise_layer {
			bindings = <
			&kp ESC  &trans &trans  &trans  &trans    			        &kp PG_UP  &kp HOME &kp UP &kp END &kp CAPS
			&sk LALT &sk LGUI  &sk LSHIFT  &sk LCTRL  &kp RALT 			&kp PG_DN &kp LEFT  &kp DOWN  &kp RIGHT   &kp DEL
			&kp LC(Z)  &kp LC(X) &kp LC(C) &kp TAB   &kp LC(V)          &kp LC(BSPC) &kp BSPC &trans &trans  &trans
																		&trans &kp LCTRL    &kp ENTER  &mo FNC
			>;
		};

		// Function keys with modifiers
		adjust_layer {
			bindings = <
			&kp F1 &kp F2 &kp F3 &kp F4 &kp F5                  &kp F6 &kp F7 &kp F8 &kp F9 &kp F10
			&sk LALT &sk LGUI &sk LSHIFT &sk LCTRL &kp RALT     &kp F11 &kp F12  &kp PRINTSCREEN &trans &trans
			&none &none &none &none &none				          &none &none &none &none &none
															&none &none              &none &none
			>;
		};

					// Low frequency symbols.
	//        		symbols_2_layer {
	// 		bindings = <
	// 		&kp IT_CARET &kp IT_UNDER &kp IT_PND &kp IT_EUR &kp IT_HASH         &none &none &none &none &none 
	// 		&kp IT_BKTK &kp IT_TILDE &kp IT_BSLH &kp IT_PIPE &kp IT_AND         &none &none &none &none &none
	// 		&none 			&none 			 &kp IT_SECT &kp IT_CCED &kp IT_DEG				  &none &none &none &none &none
	//           				           												&none &none        	&none &none 
	// 		>;
// 		};
// 
//         // Used to type regional accents.
//        		accent_layer {
// 		bindings = <
// 		&none &none &none &kp IT_CEGR &none                         &none &none &none &none &none 
// 		&kp IT_AGRV &kp IT_IGRV &kp IT_OGRV &kp IT_EGRV &kp IT_EACU &none &none &none &none &none
// 		&none &none &none &kp IT_UGRV &none                         &none &none &none &none &none
//           				     &none &none                         &none &none 
// 		>;
// 		};
// 
//         // Used to change the keyboard's settings.
//        		settings_layer {
// 		bindings = <
// 		&bootloader &none &none &bt BT_CLR &bt BT_SEL 0               &bt BT_SEL 3 &none &unstick &none &bootloader 
// 		&none &none &none &none      &bt BT_SEL 1 						  &bt BT_SEL 4 &none &none &none &none
// 		&none &none &none &none      &bt BT_SEL 2               &bt BT_SEL 5 &none &none &none &none
//           				     &none &none                         &none &none 
// 		>;
// 		};
	};
};
