/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3


/ {
	behaviors {
		hm: homerow_mods {
			compatible = "zmk,behavior-hold-tap";
			label = "HOMEROW_MODS";
			#binding-cells = <2>;
			tapping-term-ms = <200>;
			quick-tap-ms = <500>;
			flavor = "tap-preferred";
			bindings = <&kp>, <&kp>;
		};
	};

	conditional_layers {
		compatible = "zmk,conditional-layers";
		func_layer {
			if-layers = <LOWER RAISE>;
			then-layer = <ADJUST>;
		};
	};

	combos {
		compatible = "zmk,combos";
			combo_minus {
				timeout-ms = <100>;
				key-positions = <13 16>;
				bindings = <&kp MINUS>;
			};
			combo_quote {
				timeout-ms = <100>;
				key-positions = <12 17>;
				bindings = <&kp SQT>;
			};
			combo_plus {
				timeout-ms = <50>;
				key-positions = <2 3>;
				bindings = <&kp PLUS>;
			};
			combo_tmux {
				timeout-ms = <60>;
				key-positions = <16 33>;
				bindings = <&kp LC(B)>;
			};
			combo_bkspace {
				timeout-ms = <100>;
				key-positions = <6 7>;
				bindings = <&kp BSPC>;
			};
			combo_inc {
				timeout-ms = <50>;
				key-positions = <3 6>;
				bindings = <&kp LG(PLUS) >;
			};
			combo_dec {
				timeout-ms = <50>;
				key-positions = <4 5>;
				bindings = <&kp LG(MINUS) >;
			};
	};

	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
				&kp Q      &kp W      &kp E        &kp R      &kp T     &kp Y &kp U      &kp I        &kp O       &kp P
				&hm LALT A &hm LCTL S &hm LSHIFT D &hm LGUI F &kp G     &kp H &hm RGUI J &hm RSHIFT K &hm RCTRL L &hm RALT SEMICOLON
				&kp Z      &kp X      &kp C        &kp V      &kp B     &kp N &kp M      &kp COMMA    &kp DOT     &kp SLASH
				                      &lt RAISE RET   &lt LOWER TAB     &lt LOWER ESC &lt RAISE SPACE
			>;
		};

		lower_layer {
			bindings = <
				&kp F8      &kp F7      &kp F6        &kp F5      &kp KP_MULTIPLY     &kp MINUS  &kp N4      &kp N5        &kp N6       &kp F17
				&hm LALT F4 &hm LCTL F3 &hm LSHIFT F2 &hm LGUI F1 &kp KP_DIVIDE       &kp KP_DOT &hm RGUI N0 &hm RSHIFT N1 &hm RCTRL N2 &hm RALT N3
				&kp F12     &kp F11     &kp F10       &kp F9      &kp MINUS           &kp PLUS   &kp N9      &kp N8        &kp N7       &trans
				                                      &trans      &trans              &trans     &trans
			>;
		};

		raise_layer {
			bindings = <
				&trans         &trans        &kp EQUAL       &kp F16       &trans     &trans   &kp F17       &kp BSPC      &trans          &trans
				&hm LALT GRAVE &hm LCTL BSLH &hm LSHIFT LBKT &hm LGUI RBKT &kp SQT    &kp LEFT &hm RGUI DOWN &hm RSHIFT UP &hm RCTRL RIGHT &trans
				&trans         &kp UNDER     &kp LPAR        &kp RPAR      &kp MINUS  &kp C_PP &kp C_NEXT    &kp C_VOL_DN  &kp C_VOL_UP    &trans
				                                             &trans        &trans     &trans   &trans
			>;
		};

		adjust_layer {
			bindings = <
				&bootloader &none &none &bt BT_CLR &bt BT_SEL 0                  &bt BT_SEL 3 &none &none &none &bootloader
				&none       &none &none &none          &bt BT_SEL 1              &bt BT_SEL 4 &none &none &none &none
				&none       &none &none &none          &bt BT_SEL 2              &bt BT_SEL 5 &none &none &none &none
									&none &none              &none &none
			>;
		};

	};
};
